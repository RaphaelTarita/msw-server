{"name":"com.example.core.common.Model06: Resolving the endpoint types of a model class should result in a non-empty map","status":"broken","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"String index out of range: 4","trace":"java.lang.StringIndexOutOfBoundsException: String index out of range: 4\r\n\tat java.base/java.lang.StringLatin1.charAt(StringLatin1.java:47)\r\n\tat java.base/java.lang.String.charAt(String.java:693)\r\n\tat com.example.core.common.properties.RecursiveInspector$Companion.levelCount(RecursiveInspector.kt:65)\r\n\tat com.example.core.common.properties.RecursiveInspector$Companion.access$levelCount(RecursiveInspector.kt:18)\r\n\tat com.example.core.common.properties.RecursiveInspector.inspect(RecursiveInspector.kt:40)\r\n\tat com.example.core.common.properties.TypeResolver.extract(TypeResolver.kt:13)\r\n\tat com.example.core.common.properties.TypeResolver.resolve(TypeResolver.kt:29)\r\n\tat com.example.core.common.properties.TypeResolverTests$Companion$modelTests$1$1.invokeSuspend(TypeResolverTests.kt:25)\r\n\tat com.example.core.common.properties.TypeResolverTests$Companion$modelTests$1$1.invoke(TypeResolverTests.kt)\r\n\tat io.kotest.core.internal.ExecutionsKt$executeWithBehaviours$2$1.invokeSuspend(executions.kt:13)\r\n\tat io.kotest.core.internal.ExecutionsKt$executeWithBehaviours$2$1.invoke(executions.kt)\r\n\tat io.kotest.core.internal.ExecutionsKt.wrapTestWithGlobalAssert(executions.kt:39)\r\n\tat io.kotest.core.internal.ExecutionsKt$executeWithBehaviours$2.invokeSuspend(executions.kt:12)\r\n\tat io.kotest.core.internal.ExecutionsKt$executeWithBehaviours$2.invoke(executions.kt)\r\n\tat io.kotest.core.internal.ExecutionsKt$wrapTestWithAssertionModeCheck$2.invokeSuspend(executions.kt:25)\r\n\tat io.kotest.core.internal.ExecutionsKt$wrapTestWithAssertionModeCheck$2.invoke(executions.kt)\r\n\tat io.kotest.core.internal.AssertionsCheckKt.executeWithAssertionsCheck(assertionsCheck.kt:25)\r\n\tat io.kotest.core.internal.ExecutionsKt.wrapTestWithAssertionModeCheck(executions.kt:24)\r\n\tat io.kotest.core.internal.ExecutionsKt.executeWithBehaviours(executions.kt:11)\r\n\tat io.kotest.core.internal.TestCaseExecutor$executeInScope$2.invokeSuspend(TestCaseExecutor.kt:258)\r\n\tat io.kotest.core.internal.TestCaseExecutor$executeInScope$2.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturn(Undispatched.kt:91)\r\n\tat kotlinx.coroutines.CoroutineScopeKt.coroutineScope(CoroutineScope.kt:194)\r\n\tat io.kotest.core.internal.TestCaseExecutor.executeInScope(TestCaseExecutor.kt:252)\r\n\tat io.kotest.core.internal.TestCaseExecutor$executeAndWait$2$1$3$1$1.invokeSuspend(TestCaseExecutor.kt:227)\r\n\tat io.kotest.core.internal.TestCaseExecutor$executeAndWait$2$1$3$1$1.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturnIgnoreTimeout(Undispatched.kt:102)\r\n\tat kotlinx.coroutines.TimeoutKt.setupTimeout(Timeout.kt:120)\r\n\tat kotlinx.coroutines.TimeoutKt.withTimeout(Timeout.kt:37)\r\n\tat io.kotest.core.internal.TestCaseExecutor$executeAndWait$2$1$3$1.invokeSuspend(TestCaseExecutor.kt:226)\r\n\tat io.kotest.core.internal.TestCaseExecutor$executeAndWait$2$1$3$1.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.engine.ExecutorExecutionContext$executeWithTimeoutInterruption$$inlined$suspendCoroutine$lambda$2.invokeSuspend(ExecutorExecutionContext.kt:56)\r\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\r\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:56)\r\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:274)\r\n\tat kotlinx.coroutines.BlockingCoroutine.joinBlocking(Builders.kt:84)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking(Builders.kt:59)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking(Unknown Source)\r\n\tat io.kotest.engine.ExecutorExecutionContext.executeWithTimeoutInterruption(ExecutorExecutionContext.kt:55)\r\n\tat io.kotest.core.internal.TestCaseExecutor$executeAndWait$2$1$3.invokeSuspend(TestCaseExecutor.kt:225)\r\n\tat io.kotest.core.internal.TestCaseExecutor$executeAndWait$2$1$3.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.mpp.ReplayKt.replay(replay.kt:18)\r\n\tat io.kotest.core.internal.TestCaseExecutor$executeAndWait$2$1.invokeSuspend(TestCaseExecutor.kt:220)\r\n\tat io.kotest.core.internal.TestCaseExecutor$executeAndWait$2$1.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.engine.ExecutorExecutionContext$executeWithTimeoutInterruption$$inlined$suspendCoroutine$lambda$2.invokeSuspend(ExecutorExecutionContext.kt:56)\r\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\r\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:56)\r\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:274)\r\n\tat kotlinx.coroutines.BlockingCoroutine.joinBlocking(Builders.kt:84)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking(Builders.kt:59)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking(Unknown Source)\r\n\tat io.kotest.engine.ExecutorExecutionContext.executeWithTimeoutInterruption(ExecutorExecutionContext.kt:55)\r\n\tat io.kotest.core.internal.TestCaseExecutor$executeAndWait$2.invokeSuspend(TestCaseExecutor.kt:213)\r\n\tat io.kotest.core.internal.TestCaseExecutor$executeAndWait$2.invoke(TestCaseExecutor.kt)\r\n\tat kotlinx.coroutines.intrinsics.UndispatchedKt.startUndispatchedOrReturnIgnoreTimeout(Undispatched.kt:102)\r\n\tat kotlinx.coroutines.TimeoutKt.setupTimeout(Timeout.kt:120)\r\n\tat kotlinx.coroutines.TimeoutKt.withTimeout(Timeout.kt:37)\r\n\tat io.kotest.core.internal.TestCaseExecutor.executeAndWait(TestCaseExecutor.kt:212)\r\n\tat io.kotest.core.internal.TestCaseExecutor.invokeTestCase(TestCaseExecutor.kt:180)\r\n\tat io.kotest.core.internal.TestCaseExecutor.executeActiveTest(TestCaseExecutor.kt:149)\r\n\tat io.kotest.core.internal.TestCaseExecutor$intercept$innerExecute$1$1.invokeSuspend(TestCaseExecutor.kt:87)\r\n\tat io.kotest.core.internal.TestCaseExecutor$intercept$innerExecute$1$1.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.internal.TestCaseExecutor.executeIfActive(TestCaseExecutor.kt:113)\r\n\tat io.kotest.core.internal.TestCaseExecutor$intercept$innerExecute$1.invokeSuspend(TestCaseExecutor.kt:87)\r\n\tat io.kotest.core.internal.TestCaseExecutor$intercept$innerExecute$1.invoke(TestCaseExecutor.kt)\r\n\tat io.kotest.core.internal.TestCaseExecutor.intercept(TestCaseExecutor.kt:101)\r\n\tat io.kotest.core.internal.TestCaseExecutor.execute(TestCaseExecutor.kt:67)\r\n\tat io.kotest.engine.runners.SingleInstanceSpecRunner.runTest(SingleInstanceSpecRunner.kt:73)\r\n\tat io.kotest.engine.runners.SingleInstanceSpecRunner$execute$2$invokeSuspend$$inlined$invoke$lambda$1.invokeSuspend(SingleInstanceSpecRunner.kt:83)\r\n\tat io.kotest.engine.runners.SingleInstanceSpecRunner$execute$2$invokeSuspend$$inlined$invoke$lambda$1.invoke(SingleInstanceSpecRunner.kt)\r\n\tat io.kotest.engine.spec.SpecRunner$runParallel$$inlined$map$lambda$2$1.invokeSuspend(SpecRunner.kt:80)\r\n\tat kotlin.coroutines.jvm.internal.BaseContinuationImpl.resumeWith(ContinuationImpl.kt:33)\r\n\tat kotlinx.coroutines.DispatchedTask.run(DispatchedTask.kt:56)\r\n\tat kotlinx.coroutines.EventLoopImplBase.processNextEvent(EventLoop.common.kt:274)\r\n\tat kotlinx.coroutines.BlockingCoroutine.joinBlocking(Builders.kt:84)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking(Builders.kt:59)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking(Unknown Source)\r\n\tat kotlinx.coroutines.BuildersKt__BuildersKt.runBlocking$default(Builders.kt:38)\r\n\tat kotlinx.coroutines.BuildersKt.runBlocking$default(Unknown Source)\r\n\tat io.kotest.engine.spec.SpecRunner$runParallel$$inlined$map$lambda$2.run(SpecRunner.kt:79)\r\n\tat java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)\r\n\tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\r\n\tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\r\n\tat java.base/java.lang.Thread.run(Thread.java:834)\r\n"},"stage":"finished","steps":[{"name":"com.example.core.common.Model06: Resolving the endpoint types of a model class should result in a non-empty map","status":"passed","steps":[],"attachments":[],"parameters":[],"start":0,"stop":0}],"attachments":[],"parameters":[],"start":1605448016583,"stop":1605448016583,"uuid":"612f7140-9e09-4a46-bef7-d82bdc884775","historyId":"com.example.core.common.Model06: Resolving the endpoint types of a model class should result in a non-empty map","testCaseId":"com.example.core.common.properties.TypeResolverTests/com.example.core.common.Model06_Resolving_the_endpoint_types_of_a_model_class_should_result_in_a_nonempty_map","fullName":"com.example.core.common.Model06: Resolving the endpoint types of a model class should result in a non-empty map","labels":[{"name":"framework","value":"kotest"},{"name":"host","value":"RAPHAEL-BASE"},{"name":"language","value":"kotlin"},{"name":"package","value":"com.example.core.common.properties"},{"name":"suite","value":"com.example.core.common.properties.TypeResolverTests"},{"name":"thread","value":"7188@RAPHAEL-BASE.SpecRunner-217(252)"}],"links":[]}