{"name":"xxxJoin(Map<K, V>, Map<K, U>) variations Tests errorJoin() should not fulfill its preconditions and throw an IllegalArgumentException","status":"passed","stage":"finished","steps":[{"name":"xxxJoin(Map<K, V>, Map<K, U>) variations Tests","status":"passed","steps":[],"attachments":[],"parameters":[],"start":0,"stop":0},{"name":"errorJoin() should not fulfill its preconditions and throw an IllegalArgumentException","status":"passed","steps":[],"attachments":[],"parameters":[],"start":0,"stop":0}],"attachments":[],"parameters":[],"start":1604839051194,"stop":1604839051196,"uuid":"f9b71900-a521-43de-8639-08b7b0f8417e","historyId":"errorJoin() should not fulfill its preconditions and throw an IllegalArgumentException","testCaseId":"com.example.core.common.HelpersTests/xxxJoinMapK_V_MapK_U_variations_Tests/errorJoin_should_not_fulfill_its_preconditions_and_throw_an_IllegalArgumentException","fullName":"xxxJoin(Map<K, V>, Map<K, U>) variations Tests errorJoin() should not fulfill its preconditions and throw an IllegalArgumentException","labels":[{"name":"framework","value":"kotest"},{"name":"host","value":"RAPHAEL-BASE"},{"name":"language","value":"kotlin"},{"name":"package","value":"com.example.core.common"},{"name":"suite","value":"com.example.core.common.HelpersTests"},{"name":"thread","value":"10844@RAPHAEL-BASE.SpecRunner-1(23)"}],"links":[]}